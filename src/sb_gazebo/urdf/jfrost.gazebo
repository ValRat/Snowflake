<?xml version="1.0"?>
<!-- 
     The Controllers for jfrost, a 2-wheel drive, diff-steering robot
-->
<robot name="jfrost" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <gazebo reference="chassis">
    <material>Gazebo/Blue</material>
  </gazebo>

  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/robot</robotNamespace>
    </plugin>
  </gazebo>

  <!-- STEERING CONTROLLER -->

  <!-- DIFFERENTIAL DRIVE -->
  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>50</updateRate>
      <leftJoint>left_front_wheel_hinge</leftJoint>
      <rightJoint>right_front_wheel_hinge</rightJoint>
      <wheelSeparation>${chassis_width+wheel_width}</wheelSeparation>
      <wheelDiameter>${2*wheel_radius}</wheelDiameter>
      <wheelTorque>3</wheelTorque>
      <commandTopic>robot/cmd_vel</commandTopic>
      <odometryTopic>robot/odom_diffdrive</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_link</robotBaseFrame>
      <legacyMode>False</legacyMode>
    </plugin>
  </gazebo>

  <!-- IMU -->
  <gazebo>
    <plugin name="imu_controller" filename="libgazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>50.0</updateRate>
      <bodyName>chassis</bodyName>
      <topicName>/imu</topicName>
      <gaussianNoise>2.89e-08</gaussianNoise>
      <xyzOffsets>0 0 0</xyzOffsets>
      <rpyOffsets>0 0 0</rpyOffsets>
    </plugin>
  </gazebo>

  <!-- Zed camera -->
  <gazebo reference="camera">
    <sensor type="depth" name="zed_camera">
      <always_on>1</always_on>
      <update_rate>30.0</update_rate>
      <visualize>true</visualize>
      <camera>
        <horizontal_fov>1.91986</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <depth_camera>

        </depth_camera>
        <clip>
          <near>0.5</near>
          <far>20</far>
        </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>1.0</updateRate>
        <cameraName>zed</cameraName>
        <imageTopicName>/zed/camera/image_raw</imageTopicName>
        <cameraInfoTopicName>/zed/depth/camera_info</cameraInfoTopicName>
        <depthImageTopicName>/zed/depth/image_raw</depthImageTopicName>
        <depthImageInfoTopicName>/zed/depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>/zed/camera/point_cloud/uncorrected_cloud_do_not_use</pointCloudTopicName>
        <frameName>camera</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <distortionK1>0.00000001</distortionK1>
        <distortionK2>0.00000001</distortionK2>
        <distortionK3>0.00000001</distortionK3>
        <distortionT1>0.00000001</distortionT1>
        <distortionT2>0.00000001</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>

<<<<<<< HEAD
  </gazebo>
=======
    <!-- CAMERA -->
    <gazebo reference="camera">
      <material>Gazebo/Red</material>
      <sensor type="camera" name="camera1">
        <update_rate>30.0</update_rate>
        <camera name="head">
          <horizontal_fov>1.29154</horizontal_fov>
          <image>
            <width>1920</width>
            <height>1080</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>200</far>
          </clip>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>/camera1</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>camera_link</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </gazebo>
    
>>>>>>> visionTesting

  <!--
      THERE ARE TWO DIFFERENT COMMENTED SECTIONS IN THE LIDAR
      SECTION BELOW YOU MAY HAVE TO CHANGE TO GET IT WORKING WITH
      INTEL INTEGRATED GRAPHICS
  -->
  <!-- SICK Lidar (GPU) -->
  <gazebo reference="lidar">
    <material>Gazebo/Red</material>
    <!-- Set depending on whether you have a GPU or not -->
    <sensor type="gpu_ray" name="lidar">
      <!--<sensor type="ray" name="lidar">-->
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>75</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>180</samples>
            <resolution>1</resolution>
            <min_angle>-0.785398</min_angle>
            <max_angle>0.785398</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <!-- Set depending on whether you have a GPU or not -->
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
        <!--<plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">-->
        <topicName>/robot/laser/scan</topicName>
        <frameName>lidar</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <!-- GPS -->
  <gazebo>
    <material>Gazebo/Orange</material>
    <plugin name="gps_sim" filename="libhector_gazebo_ros_gps.so">
      <alwaysOn>1</alwaysOn>
      <updateRate>10</updateRate>
      <bodyName>chassis</bodyName>
      <topicName>/gps_driver/navsatfix</topicName>
      <velocityTopicName>/robot/gps_vel</velocityTopicName>
      <drift>5.0 5.0 5.0</drift>
      <gaussianNoise>0.1 0.1 0.1</gaussianNoise>
      <velocityDrift>0 0 0</velocityDrift>
      <velocityGaussianNoise>0.1 0.1 0.1</velocityGaussianNoise>
      <!-- Set these parameters depending on where you want to gps reference to be -->
      <!-- NOTE: THESE SHOULD MATCH THE COMPASS_SIM PLUGIN - SEE BELOW-->
      <!-- EDC (Very Roughly) -->
      <referenceLatitude>49.262479</referenceLatitude>
      <referenceLongitude>-123.248600</referenceLongitude>
      <referenceAltitude>50.00</referenceAltitude>
      <referenceHeading>0.00</referenceHeading>
      </plugin>
  </gazebo>

</robot>
